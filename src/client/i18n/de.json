{
    "OCCUPATION": "Webentwickler und Tutor",
    "BORN": "Geboren",
    "IN": "in",
    "EDUCATION": "Ausbildung",
    "TU_DRESDEN": "Technische Universität Dresden",
    "LOCATION": "Ort",
    "CONTACT_REQUEST": "Kontaktanfrage",
    "EMAIL": "E-Mail",
    "TELEPHONE": "Telefon: (0176) 647 01207",
    "SKILLS": "Fähigkeiten",
    "EXPERT": "Experte",
    "INTERMEDIATE": "Solide Kenntnisse",
    "BASIC": "Grundkenntnisse",
    "PROFILE": "Profil",
    "EXPERIENCE": "Erfahrung",
    "CONTACT": "Kontakt",
    "PROJECTS": "Projekte",
    "OTHER_ACTIVITIES": "Sonstige Aktivitäten",
    "USED_TECHNOLOGIES": "Eingesetzte Technologien:",
    "PRESENT": "heute",
    "EXPERIENCE_INTRO": "Programmieren und Softwareentwicklung waren schon immer meine Leidenschaften. Auf dieser Seite findet sich eine Auflistung von erwähnenswerten Tätigkeiten und Projekten, an denen ich in der Vergangenheit gearbeitet habe.",
    "CV_DOWNLOAD_HINT": "Sie können diesen CV entweder als Word- oder als PDF-Datei herunterladen:",
    "CV_DOWNLOAD_WORD_HREF": "assets/resume_de.docx",
    "CV_DOWNLOAD_WORD_TEXT": "Download als Word-Datei (.docx)",
    "CV_DOWNLOAD_PDF_HREF": "assets/resume_de.pdf",
    "CV_DOWNLOAD_PDF_TEXT": "Download als PDF-Datei",
    "KIWIGRID_DESCRIPTION": "Für die Kiwigrid GmbH arbeitete ich an der Konzeption und Umsetzung von Komponenten für das „Solarwatt-Energy-Portal”, eine Angular.js-App mit Schnittstellen für die Energie-Manager der Firma Solarwatt. Zu meinen Aufgaben gehörten das Refactoring von Charting-Komponenten zur Visualisierung von Stromverbrauchs- und -erzeugungsdaten im Zeitverlauf sowie die Umsetzung des Unit-Testings der Frontend-Komponenten mit Karma und Jasmine. Außerdem war ich an der Entwicklung zusätzlicher Teilanwendungen für die Endkunden beteiligt. Dazu gehörte unter anderem die Implementierung mehrerer Angular-Direktiven zur Datenvisualisierung sowie eines Kontaktformulars mit Backend-Anbindung.",
    "CARD_CRASH_DESCRIPTION": "CardCrash ist eine in Java geschriebene Library zum Auswerten von Poker-Händen. Sie ist lose angelehnt an die Javascript-Library <a href=\"https://github.com/mdp/hoyle\">Hoyle</a>, erzeugt aber eine genauere Aufschlüsselung der Hand. Besonderer Fokus lag außerdem auf dem objektorientierten Design und der Bereitstellung einer benutzerfreundlichen Programmierschnittstelle. Teilaspekte des Quellcodes von CardCrash benutze ich gerne als Lehrbeispiele für meine Studenten im Einzelunterricht, darunter das Multiton-Pattern, in dem die Karten-Klasse implementiert ist sowie die Enumerations für Rang und Farbe von Karten, die ihrerseits Konstruktoren und Methoden beinhalten; ein Sprach-Feature von Java, das selbst vielen selbsternannten Experten unbekannt ist.",
    "HOLDEM_TIGHT_DESCRIPTION": "Angular.js-Single-Page-App zum Tracking von No-Limit-Hold’em-Spielen. Spieler können an einem virtuellen Pokertisch angelegt und ihre Aktionen aufgezeichnet werden, Karten zugewiesen und Hände ausgewertet werden &mdash; letzteres auf Server-Seite mithilfe der Javascript-Library <a href=\"https://github.com/mdp/hoyle\">Hoyle</a>. Die Spielregeln sind in die Anwendung einprogrammiert, so dass nur gültige Aktionen möglich sind. Die Entwicklung ist noch nicht abgeschlossen, Erweiterungen wie statistische Auswertungen von Spielerverhalten oder Speichern und Laden von Spielständen sind in Planung. Der Code ist fast vollständig durch Unit-Tests abgedeckt. Das Backend ist in node.js mit dem Routing-Framework Express implementiert. Sämtliche Views liegen als Jade-Templates vor, die vom Backend gerendert werden.",
    "SCRIPTEX_DESCRIPTION": "Scriptex ist ein node.js-Modul, mit dem Drehbücher, die als txt-Files vorliegen, in LaTeX-Files umgewandelt werden können, die die LaTeX-Klasse <a href=\"http://www.ctan.org/tex-archive/macros/latex/contrib/screenplay\">screenplay</a> verwenden. Daraus können dann im nächsten Schritt PDFs der Drehbücher nach Industriestandard generiert werden. Bei der Implementierung habe ich Wert auf größtmögliche Flexibilität im Hinblick auf das Format der Input-Dateien gelegt. So sind Dinge wie die Größe von Einrückungen, die in der Textdatei vorliegen, konfigurierbar. Der Code von scriptex beruht naturgemäß zum größten Teil auf String- und Dateioperationen. Als Beispiele liegen dem Projekt einige Drehbücher der ersten Staffel der <a href=\"https://en.wikipedia.org/wiki/Twin_Peaks\">besten Serie aller Zeiten</a> bei.",
    "TETRIX_DESCRIPTION": "Bei Tetrix handelt es sich um einen Klon des allseits beliebten Spieleklassikers Tetris für das mobile Betriebssystem Android. Es war etwa zwei Jahre lang im Google-Play-Store erhältlich, bis es per DMCA-Takedown entfernt wurde. Es war für Android 2.3 optimiert. Auch bei dieser App lag ein großer Fokus auf Konfigurierbarkeit. So war unter anderem frei wählbar, welche Steine im Spiel vorkommen sollen und welche nicht. Auch ein effizientes objektorientiertes Design war ein Hauptentwicklungsziel, damit dass Spiel auch bei begrenzten Resourcen auf damaligen Smartphones flüssig lief. Design Patterns wie Flyweight, Prototype, Abstract Factory, Command und Strategy fanden Anwendung, was auch dieses Projekt zu einem guten Lehrbeispiel für meine Studenten macht.",
    "TUTORING_NAME": "Nachhilfelehrer",
    "TUTORING_DESCRIPTION": "Vielen Schülern und Studenten habe ich über die Jahre in den Fächern Mathematik und Informatik zu Prüfungen und Klausuren begleitet und war bei der Nachhilfeagentur <a href=\"https://tutoria.de\">tutoria</a> einer der gefragtesten Tutoren in Dresden. Auch auf anderen Nachhilfeplattformen im Web wurde ich im Laufe der Zeit immer öfter angefragt, hier vor allem von Studenten technischer Fächer, die kurz- oder langfristige Unterstützung beim Programmierenlernen benötigten.",
    "UNIVERSITY_NAME": "Java-Tutor, Technische Universität Dresden",
    "UNIVERSITY_DESCRIPTION": "Im Rahmen der Lehrveranstaltung „Software- und Programmiertechnik im Maschinenwesen” habe ich Studenten verschiedener Fachrichtungen in Übungen und Praktika die objektorientierte Entwicklung mit Java vermittelt. Am Ende des Semesters war ich außerdem mit der Korrektur der Klausuren befasst. Inhalte des Kurses waren neben Java-Grundlagen auch objektorientierte Analyse mit verschiedenen Arten von UML-Diagrammen und Softwaredokumentation mit Javadoc.",
    "FRAUNHOFER_NAME": "Studentische Hilfskraft, Fraunhofer IVI",
    "FRAUNHOFER_DESCRIPTION": "Im <a href=\"http://www.ivi.fraunhofer.de\">Fraunhofer-Institut für Verkehrs- und Infrastruktursysteme (IVI)</a> in Dresden habe ich in großer Eigenverantwortung Komponenten für eine vom Institut entwickelte Katastrophenschutz-Software in Java entwickelt. Außerdem war ich an einem Projekt zur Erstellung von Befahrbarkeitsanalysen in Abhängigkeit von Bodenverhältnissen, Geländeprofilen und Wetterdaten im Umfeld von ArcGIS beteiligt. Hierbei habe ich vor allem Python als Scripting-Sprache eingesetzt.",
    "RESPONSIBLE_FOR_CONTENT": "Verantwortlich für den Inhalt",
    "CONTACT_INFORMATION": "Kontaktdaten",
    "CONTACT_INTRO": "Falls mein Angebot für Sie interessant klingt, zögern Sie nicht mich zu kontaktieren."
}
