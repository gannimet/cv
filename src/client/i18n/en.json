{
    "OCCUPATION": "Web Developer and Tutor",
    "BORN": "Born",
    "IN": "in",
    "EDUCATION": "Education",
    "TU_DRESDEN": "Dresden University of Technology",
    "LOCATION": "Location",
    "CONTACT_REQUEST": "Contact request",
    "EMAIL": "E-mail",
    "SKILLS": "Skills",
    "EXPERT": "Expert",
    "INTERMEDIATE": "Intermediate",
    "BASIC": "Basic",
    "PROFILE": "Profile",
    "EXPERIENCE": "Experience",
    "CONTACT": "Contact",
    "PROJECTS": "Projects",
    "OTHER_ACTIVITIES": "Other activities",
    "USED_TECHNOLOGIES": "Technologies:",
    "PRESENT": "present",
    "EXPERIENCE_INTRO": "I have been passionate about programming and software development for as long as I can remember. Below you'll find an assortment of notable activities and project I've worked on in the past.",
    "KIWIGRID_DESCRIPTION": "For the green-energy startup Kiwigrid I helped design and implement components for the cloud-based \"Solarwatt Energy Portal\", an Angular.js application with interfaces to energy-managing devices manufactured by Solarwatt. My activities included refactoring of charting components allowing the visualization of power production and consumption data over time as well as unit testing frontend components using Karma and Jasmine. Additionally I was involved in the conception and implementation of newly created utility apps for clients. Among my contributions were several Angular directives for data visualization and a contact form with a REST interface.",
    "CARD_CRASH_DESCRIPTION": "CardCrash is a poker hand evaluation library written in Java. It is loosely inspired by the similar Javascript library <a href=\"https://github.com/mdp/hoyle\">Hoyle</a>, but offers a more detailed breakdown of a hand. Among the main goals while working on CardCrash were a sensible object-oriented design of the code and creating a user-friendly programming interface. Several aspects of its code regularly serve as examples in lessons with my programming students. These include the multiton design pattern used for card creation or the definitions of the enumerations for card ranks and suits, which contain constructors and methods just like a \"normal\" class; a Java language feature largely unknown even to many self-proclaimed experts.",
    "HOLDEM_TIGHT_DESCRIPTION": "Tracking app for Textas Hold'em poker games written in Angular.js. Players can be placed at a virtual poker table and have their actions recorded, cards assigned to them and their hands evaluated. Hand evaluation is achieved on the server side using the Javascript library <a href=\"https://github.com/mdp/hoyle\">Hoyle</a>. The app knows about the rules of the game and only allows for actions that are legal. Deveopment of Hold'em Tight is still in progress, things like statistical analysis of a player's behavior and saving and loading game state are in the pipeline. The code is almost completely covered by unit tests. The backend is implemented in node.js using the routing framework Express. All views are Jade templates that are rendered by the backend before being served to the client.",
    "SCRIPTEX_DESCRIPTION": "Scriptex is a node.js module to convert screenplays from text files into LaTeX files utilizing the LaTeX class <a href=\"http://www.ctan.org/tex-archive/macros/latex/contrib/screenplay\">screenplay</a>. The output LaTeX file can be used to generate a PDF of the screenplay following the industry standard format. During the implementation I put special emphasis on allowing maximum flexibility with regard to the format of the input files. Things like indentation size used in the text file are completely customizable. The code naturally relies heavily on string and file operations. Included in the project's code on Github are screenplays of several episodes of the first season of <a href=\"https://en.wikipedia.org/wiki/Twin_Peaks\">the best TV show of all time</a>.",
    "TETRIX_DESCRIPTION": "Tetrix is a clone of the universally popular computer game classic Tetris for the mobile operating system Android. It was available on the Google Play Store for about two years before it was removed via DMCA takedown. The game was optimized for Android 2.3. This app, too, was designed with maximum customizability in mind. The user could choose freely which stones were allowed to pop up in the game. Another main goal during development was an efficient object-oriented software design to allow for fluent game play despite limited resources found in smartphones at the time. Design patterns like flyweight, prototype, abstract factory, command and strategy were applied, which lead to several aspects of this app serving as good teching examples in lessons with my students."
}
